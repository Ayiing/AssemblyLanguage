PUBLIC GA1
EXTRN RANKING:WORD, CALC:NEAR, SORT:NEAR, PRINT:NEAR, PRINT_NUM:NEAR
.386
DATA SEGMENT USE16 PARA PUBLIC 'DATA'
M = 10
BUF  DB '*****THE SHOP IS SHOP_ONE*****$'
BUF1 DB 'PLEASE INPUT YOUR NAME: $'
BUF2 DB 'PLEASE INPUT YOUR PASSWORD: $'
BUF3 DB 'The Name Is Wrong!$'
BUF4 DB 'Please Input The Good You Want!$'
BUF5 DB 'The Name Is Right!$'
BUF6 DB 'The PWD Is Wrong!$'
BUF7 DB 'Landed Successfully!$'
BUF8 DB 'Modifying Information Failed!$'
MENU1 DB '1==Query product information$'
MENU2 DB '2==Modify product information$'
MENU3 DB '3==Calculate the recommendation$'
MENU4 DB '4==Calculate the recommendation rank$'
MENU5 DB '5==Output all commodity information$'
MENU6 DB '6==Program exits$'
PROJECT1 DB 'Discount: $'
PROJECT2 DB 'Purchase price: $'
PROJECT3 DB 'Price: $'
PROJECT4 DB 'Quantity of incoming goods: $'
;BUF用来提示用户
;MENU用来显示菜单
;PROJECT用来提示要修改的信息
AUTH DB ?;AUTH用来表示登陆状态
CRLF DB 0DH,0AH,'$';用来输出回车、换行
IN_NAME DB 10;用来存储输入的用户名
	DB ?
	DB 10 DUP(0)
IN_PWD   DB 6;用来存储输入的密码
	DB ?
	DB 6 DUP(0)
IN_GOOD DB 11;用来存储输入的商品名称
	DB ?
	DB 11 DUP(0)
IN_VALUE DB 10;用来存储输入的要修改的信息
	DB ?
	DB 10 DUP(0)
BNAME DB 'WANGM',5 DUP(0);已存用户名
COUNT1 = $-BNAME
BPASS DB 'TEST',0,0;已存密码
COUNT2 = $-BPASS
N EQU 10;商品总数
S1  DB 'SHOP_ONE',0;商店名称
GA1 DB 'PEN',7 DUP(0),10;商品PEN
    DW 35,56,70,25,68
GA2 DB 'BOOK',6 DUP(0),9;商品BOOK
    DW 12,30,25,5,102
GAN DB N-3 DUP('TEMP-VALUE',8,15,0,20,0,30,0,2,0,?,?)
GA3 DB 'BAG', 7 DUP(0) ,10;商品BAG
	DW 35,56,70,25,102
WRITE	MACRO A,B;宏定义、用来输出提示并换行
		LEA DX, A
		MOV AH, 9
		INT 21H
		LEA DX,B
		MOV AH,9
		INT 21H
		ENDM
WRAP	MACRO A;用来输出换行
		LEA DX,A 
		MOV AH,9
		INT 21H
		ENDM
WRITE_ONLY	MACRO A;用来提示
		LEA DX, A 
		MOV AH,9
		INT 21H
		ENDM
DATA ENDS
STACK SEGMENT USE16 STACK
    DB 200 DUP(0)
STACK ENDS
CODE SEGMENT USE16 PARA PUBLIC 'CODE'
    ASSUME CS:CODE,DS:DATA,SS:STACK
START:
	MOV AX, DATA
	MOV DS,AX
	LEA DI,GA1;DI首先指向GA1，商品PEN 
	MOV CX,10
	WRITE BUF,CRLF
	
L_IN_NAME: ;用来输入用户名
	WRITE_ONLY BUF1
	LEA DX,IN_NAME
	MOV AH,10
	INT 21H
	WRAP CRLF

	CMP IN_NAME+1,0;判断是否仅输入回车，若是，直接跳到功能3
	JE  L_AUTH_0
	CMP IN_NAME+1,1;如果不是1个字符，则不是q，此时开始检查用户名
	JNE L_CHECK_NAME
	CMP IN_NAME+2,71H;比较是不是q
	JNE L_CHECK_NAME
	JMP OVER
	
L_CHECK_NAME:
	LEA SI,IN_NAME;SI指向输入的名称
	LEA DI,BNAME;DI指向原有的用户名
	MOV CL,1[SI]
	CMP CL,5
	JNE L_OUT_WRONG_N
L_LOOP_N:
	MOV AL,2[SI]
	MOV BL,[DI]
	INC SI
	INC DI
	CMP AL,BL
	JNE L_OUT_WRONG_N
	LOOP L_LOOP_N
	WRITE BUF5,CRLF

L_IN_PWD:;与检查用户名相似
	WRITE_ONLY  BUF2
	LEA DX,IN_PWD
	MOV AH,10
	INT 21H
	WRAP CRLF
	
	LEA SI,IN_PWD;比较密码
	LEA DI,BPASS
	MOV CL,1[SI]
	CMP CL,4
	JNE L_OUT_WRONG_PWD
L_CHECK_PWD:
	MOV AL,2[SI]
	MOV BL,[DI]
	INC SI
	INC DI
	CMP AL,BL
	JNE L_OUT_WRONG_PWD
	LOOP L_CHECK_PWD;一个字符一个字符地检查
	JMP L_AUTH_1

L_OUT_WRONG_N: 
	WRITE BUF3, CRLF
	JMP L_IN_NAME;如果输入密码不正确，则重新输入用户名
	
L_OUT_WRONG_PWD:
	WRITE BUF6, CRLF
	JMP L_IN_NAME

L_AUTH_0:
	MOV AUTH,0;如果用户名仅回车,则AUTH->0,进入菜单界面
	JMP MENU
L_AUTH_1:
	MOV AUTH,1;如果用户名和密码均正确,则AUTH->1,进入MENU界面
	WRITE BUF7, CRLF
MENU:	;MENU界面打印
	WRITE MENU1,CRLF
	CMP AUTH,0;此时,如果AUTH==0,仅打印1、6功能
	JE	PASS
	WRITE MENU2,CRLF
	WRITE MENU3,CRLF
	WRITE MENU4,CRLF
	WRITE MENU5,CRLF	
PASS:;判断输入的数字
	WRITE MENU6,CRLF	
	MOV AH,1
	INT 21H
	WRAP CRLF
	CMP AL,31H
	JE XINXI;功能1,显示商品信息
	CMP AL,33H
	JNE	SKIPA
	CALL	CALC;功能3计算推荐度
SKIPA:
	CMP AL,34H
	JNE	SKIPB
	CALL	SORT;功能4计算排名
SKIPB:	
	CMP AL,35H
	JNE	SKIPC
	CALL	PRINT;功能5打印全部的商品信息
SKIPC:	
	CMP AL,36H;功能6退出程序
	JE 	OVER
	
	CMP AUTH,0
	JE 	MENU
	
	CMP AL,32H;此时如果AUTH==1,并且输入的数字是2,则修改信息
	JE 	REWRITE
	JMP MENU

XINXI:	
	CALL SEARCH;调用SEARCH函数（函数主体是输入匹配商品名称，返回指针DI）
	MOV AX,0
	MOV AL,IN_GOOD+1
	SUB DI,AX;返回的DI值为商品名称的开头
	MOV CX,10
XINXILOPA:	
	MOV DL,[DI]
	MOV AH,2
	INT 21H
	INC DI
	LOOP XINXILOPA ;打印商品名称
	WRAP CRLF
	MOV SI,DI;打印折扣
	CALL XIANSHI
	WRAP CRLF
	ADD SI,3
	CALL XIANSHI
	WRAP CRLF
	ADD SI,2
	CALL XIANSHI
	WRAP CRLF
	ADD SI,2
	CALL XIANSHI
	WRAP CRLF
	ADD SI,2
	CALL XIANSHI
	WRAP CRLF
	JMP MENU	

REWRITE:	
	CALL SEARCH;修改信息
	MOV AX,0
	MOV AL,IN_GOOD+1
	SUB DI,AX;返回的DI值为商品名称的开头
	MOV CX,10
REWTLOPA:	
	MOV DL,[DI]
	MOV AH,2
	INT 21H
	INC DI
	LOOP REWTLOPA 
	WRAP CRLF
	MOV SI,DI;DI指向商品数字信息区
	
DISCOUNT:	
	WRITE_ONLY PROJECT1
	CALL XIANSHI;显示折扣
	MOV DX,3EH;打印>号
	MOV AH,2
	INT 21H
	LEA DX,IN_VALUE;输入修改信息
	MOV AH,10
	INT 21H
	MOV DI,DX
	INC DI
	MOV BL,[DI]
	CMP BL,0
	JZ	PURCHASE_PRICE;输入回车跳过该项修改,进入下一项
	CMP BL,2;折扣不能超过两位数
	JS  DISCOUNT1
	WRAP CRLF
	WRITE BUF8,CRLF
	JMP  DISCOUNT;如果输入信息不符合标准，则重新修改
DISCOUNT1 :
	MOV CL,BL;将输入信息的字符个数送到BL中
	MOV CH,0
	MOV AX,0
DISCOUNT_LOPA :;整体是为了一个字符一个字符进行比较
	INC DI
	MOV BL,[DI]
	CMP BL,29H;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JNS DISCOUNT2
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  DISCOUNT
DISCOUNT2 :
	CMP BL,3AH;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JS DISCOUNT3
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  DISCOUNT
DISCOUNT3 :		
	ADD AL,BL
	SUB AL,30H		
	DEC CX
	CMP CX,0;如果比较完了，那么就跳到下一项信息进行修改
	JE DISCOUNT4
	MOV BL,10
	MUL BL
	JMP DISCOUNT_LOPA
DISCOUNT4 :
	MOV [SI],AL
	INC SI;指向进货价
	WRAP CRLF
	
	
PURCHASE_PRICE:	
	WRAP CRLF
	WRITE_ONLY PROJECT2
	CALL XIANSHI;显示折扣
	MOV DX,3EH;打印>号
	MOV AH,2
	INT 21H
	LEA DX,IN_VALUE
	MOV AH,10
	INT 21H
	MOV DI,DX
	INC DI
	MOV BL,[DI]
	CMP BL,0
	JZ	SELLING_PRICE;输入回车跳过
	CMP BL,4;折扣不可能超过三位数
	JS  PURCHASE_PRICE1
	WRAP CRLF
	WRITE BUF8,CRLF
	JMP  PURCHASE_PRICE
PURCHASE_PRICE1 :
	MOV CL,BL
	MOV CH,0
	MOV AX,0
PURCHASE_PRICE_LOPA :
	INC DI
	MOV BL,[DI]
	CMP BL,29H;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JNS PURCHASE_PRICE2
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  PURCHASE_PRICE
PURCHASE_PRICE2 :
	CMP BL,3AH;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JS PURCHASE_PRICE3
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  PURCHASE_PRICE
PURCHASE_PRICE3 :		
	ADD AL,BL
	SUB AL,30H		
	DEC CX
	CMP CX,0
	JE PURCHASE_PRICE4
	MOV BL,10
	MUL BL
	JMP PURCHASE_PRICE_LOPA
PURCHASE_PRICE4 :
	MOV [SI],AL
	INC SI;指向售价
	INC SI
	WRAP CRLF	
	
	
SELLING_PRICE:	
	WRAP CRLF
	WRITE_ONLY PROJECT3
	CALL XIANSHI;显示折扣
	MOV DX,3EH;打印>号
	MOV AH,2
	INT 21H
	LEA DX,IN_VALUE
	MOV AH,10
	INT 21H
	MOV DI,DX
	INC DI
	MOV BL,[DI]
	CMP BL,0
	JE	TOTAL_PURCHASES;输入回车跳过
	CMP BL,4;折扣不可能超过三位数
	JS  SELLING_PRICE1
	WRAP CRLF
	WRITE BUF8,CRLF
	JMP  SELLING_PRICE
SELLING_PRICE1:
	MOV CL,BL
	MOV CH,0
	MOV AX,0
SELLING_PRICE_LOPA :
	INC DI
	MOV BL,[DI]
	CMP BL,29H;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JNS SELLING_PRICE2
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  SELLING_PRICE
SELLING_PRICE2 :
	CMP BL,3AH;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JS SELLING_PRICE3
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  SELLING_PRICE
SELLING_PRICE3 :		
	ADD AL,BL
	SUB AL,30H		
	DEC CX
	CMP CX,0
	JE SELLING_PRICE4
	MOV BL,10
	MUL BL
	JMP SELLING_PRICE_LOPA
SELLING_PRICE4 :
	MOV [SI],AL
	INC SI;指向进货价
	INC SI
	WRAP CRLF	
	
	
TOTAL_PURCHASES:	
	WRAP CRLF
	WRITE_ONLY PROJECT4
	CALL XIANSHI;显示折扣
	MOV DX,3EH;打印>号
	MOV AH,2
	INT 21H
	LEA DX,IN_VALUE
	MOV AH,10
	INT 21H
	MOV DI,DX
	INC DI
	MOV BL,[DI]
	CMP BL,0
	JE	MENU;输入回车跳过
	CMP BL,4;折扣不可能超过三位数
	JS  TOTAL_PURCHASES1
	WRAP CRLF
	WRITE BUF8,CRLF
	JMP  TOTAL_PURCHASES
TOTAL_PURCHASES1:
	MOV CL,BL
	MOV CH,0
	MOV AX,0
TOTAL_PURCHASES_LOPA :
	INC DI
	MOV BL,[DI]
	CMP BL,29H;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JNS TOTAL_PURCHASES2
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  TOTAL_PURCHASES
TOTAL_PURCHASES2 :
	CMP BL,3AH;ACSII码要大于29H小于3AH,即输入的数字每一位在0--9
	JS TOTAL_PURCHASES3
	WRAP CRLF
	LEA DX,BUF8
	PUSH AX
	MOV AH,9
	INT 21H
	POP AX
	WRAP CRLF
	JMP  TOTAL_PURCHASES
TOTAL_PURCHASES3 :		
	ADD AL,BL
	SUB AL,30H		
	DEC CX
	CMP CX,0
	JE TOTAL_PURCHASES4
	MOV BL,10
	MUL BL
	JMP TOTAL_PURCHASES_LOPA
TOTAL_PURCHASES4 :
	MOV [SI],AL
	WRAP CRLF	
	JMP MENU
XIANSHI PROC
	PUSH AX
	PUSH BX
	MOV AL,[SI]
	MOV AH,0
	MOV BL,100
	DIV BL;除以100，得到百位
	MOV DL,AL
	ADD DL,30H;转换ASCII值
	PUSH AX
	MOV AH,2
	INT 21H
	POP AX
	MOV AL,AH
	MOV AH,0
	MOV BL,10
	DIV BL;得到十位
	MOV DL,AL
	ADD DL,30H;转换ASCII值
	PUSH AX
	MOV AH,2
	INT 21H
	POP AX
	MOV DL,AH
	ADD DL,30H;个位
	PUSH AX
	MOV AH,2
	INT 21H
	POP AX	
	POP BX
	POP AX
	RET
XIANSHI ENDP
	
SEARCH PROC
L_IN_GOOD:
	LEA DX,BUF4;提示输入商品名称
	MOV AH,9
	INT 21H
	LEA DX,IN_GOOD
	MOV AH,10
	INT 21H
	CMP IN_GOOD+1,0;如果输入的不是回车，则检查商品名称
	JNE L_CHECK_GOOD	
	WRAP CRLF
	JMP L_IN_GOOD;如果输入的仅仅是回车，则重新输入
	
L_CHECK_GOOD:	
	WRAP CRLF
	MOV CX,0
	MOV DX,0
	MOV AX,0
LL:
	LEA DI,GA1;先将DI指向第一个商品
	IMUL DX,21
	ADD DI,DX
	LEA SI,IN_GOOD;SI指向输入的商品名称
	MOV CL,1[SI]

L_LOOP_G: 
	MOV AL,2[SI]
	MOV BL,[DI]
	INC SI
	INC DI
	CMP AL,BL;依次比较
	JNE L_NEXT_GOOD
	DEC CL
	CMP CL,0;比较结束，则转到跳转点
	JE L_DI_RETURN
	JMP L_LOOP_G;没有检查完毕继续检查
L_NEXT_GOOD:;进入下个商品的位置
	INC DX;DX是商品个数
	CMP DX,10;
	JGE L_IN_GOOD;如果DX>10,则说明没找到，重新输入
	JMP LL
L_DI_RETURN: 
	
	RET
SEARCH	ENDP	

OVER: 
	MOV AH,4CH
	INT 21H
CODE ENDS 
	END START
