	PUBLIC RANKING, CALC, SORT, PRINT, PRINT_NUM, PRINT_DECIMAL
	EXTRN GA1:BYTE
.386
DATA SEGMENT USE16 PARA PUBLIC 'DATA'
N EQU 10
RANKING  DD N DUP(0) ; 依次储存每个商品的推荐度排名，初值为0
DATA ENDS

CODE SEGMENT USE16 PARA PUBLIC 'CODE'
	ASSUME DS:DATA
; 计算所有商品推荐度，存入相应区域，无打印输出
; 无需传参
; 调用方式 CALL CALC
CALC PROC
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	DI
	PUSH	SI
	MOV	BX, N * 21
_NEXT1:	MOV	AX, WORD PTR GA1[BX - 21][11]
	MOV	CX, 1280
	IMUL	CX
	MOV	SI, WORD PTR GA1[BX - 21][13]
	MOVSX	DI, BYTE PTR GA1[BX - 21][10]
	IMUL	SI, DI
	DIV	SI
	MOV	SI, AX
	MOV	AX, WORD PTR GA1[BX - 21][17]
	SHL	AX, 6
	XOR	DX, DX
	DIV	DWORD PTR GA1[BX - 21][15]
	ADD	SI, AX
	MOV	WORD PTR GA1[BX - 21][19], SI
	SUB	BX, 21
	JNZ	_NEXT1
	POP	SI
	POP	DI
	POP	DX
	POP	CX
	POP	BX
	POP	AX
	RET
CALC ENDP

; 根据已经计算出的推荐度，把所有商品排序，放入DS:RANKING中，排序方式为简单选择排序
; 例如DS:RANKING[i] = j 表示第i个商品的推荐度排序为j，其中 i = 0 ~ N-1, j = 1 ~ N
; 无打印输出
; 无需传参
; 调用方式 CALL SORT
; 注意：调用此子程序前最好先 CALL CALC，否则会得到错误排名
SORT PROC
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	EDI
	PUSH	ESI
	MOV	ESI, N
_NEXT2:	MOV	WORD PTR RANKING[ESI * 2 - 2], 0
	DEC	ESI
	JNZ	_NEXT2
	MOV	AX, N
_ROUND:	MOV	BX, N * 21
	MOV	CX, N
	MOV	DX, 30000
_NEXT3:	MOVZX	ESI, CX
	CMP	WORD PTR RANKING[ESI * 2 - 2], 0
	JG	_SKIP
	CMP	WORD PTR GA1[BX - 21][19], DX
	JGE	_SKIP
	MOV	DX, WORD PTR GA1[BX - 21][19]
	MOVZX	EDI, CX
_SKIP:	SUB	BX, 21
	DEC	CX
	JNZ	_NEXT3
	MOV	WORD PTR RANKING[EDI * 2 - 2], AX
	DEC	AX
	JNZ	_ROUND
	POP	ESI
	POP	EDI
	POP	DX
	POP	CX
	POP	BX
	POP	AX
	RET
SORT ENDP

; 输出所有商品的全部信息
; 每行输出一个商品
; 每一行依此输出商品序号、商品名、折扣、进货价、出售原价、库存量、销售量、推荐度、推荐度排名
; 无需传参
; 调用方式 CALL PRINT
; 注意：调用此子程序前最好先 CALL CALC 以及 CALL SORT，否则会得到错误信息
PRINT PROC
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	DI
	PUSH	ESI
	MOV	SI, 10
	MOV	CX, 1				; CX为从1开始的递增1的计数器
	XOR	DI, DI				; DI为从0开始的递增21的计数器
_NEXT4:	MOV	AX, CX
	MOV	BX, 4
	MOV	SI, 10
	CALL	PRINT_NUM
	XOR	BX, BX
_NEXT8:	MOV	DL, BYTE PTR GA1[BX][DI]
	CMP	DL, 0
	JNZ	_PRINT3
	MOV	DL, ' '
_PRINT3:	MOV	AH, 2
	INT	21H
	INC	BX
	CMP	BX, 10
	JNE	_NEXT8
	MOV	AH, 2
	MOV	DL, ' '
	INT	21H
	MOV	BX, 4
	MOV	SI, 10
	MOVZX	AX, BYTE PTR GA1[10][DI]
	CALL	PRINT_NUM
	MOV	BX, 8
	MOV	AX, WORD PTR GA1[11][DI]
	CALL	PRINT_NUM
	MOV	AX, WORD PTR GA1[13][DI]
	CALL	PRINT_NUM
	MOV	AX, WORD PTR GA1[15][DI]
	CALL	PRINT_NUM
	MOV	AX, WORD PTR GA1[17][DI]
	CALL	PRINT_NUM
	MOV	AX, WORD PTR GA1[19][DI]
	CALL	PRINT_NUM
	MOVZX	ESI, CX
	MOV	AX, WORD PTR RANKING[ESI * 2 - 2]
	MOV	BX, 4
	MOV	SI, 10
	CALL	PRINT_NUM
	MOV	AH, 2
	MOV	DL, 13
	INT	21H
	MOV	DL, 10
	INT	21H
	ADD	DI, 21
	INC	CX
	CMP	CX, N
	JLE	_NEXT4
		MOV	AH, 2
	MOV	DL, 13
	INT	21H
	MOV	DL, 10
	INT	21H
	POP	ESI
	POP	DI
	POP	DX
	POP	CX
	POP	BX
	POP	AX
	RET
PRINT ENDP

; 按(SI)进制输出无符号整数(AX)，至少占(BX)个字节，不够用空格补齐
; 调用方式：
; MOV AX, 123
; MOV SI, 16
; MOV BX, 5
; CALL PRINT_NUM
PRINT_NUM PROC
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	XOR	CX, CX
_NEXT5:	XOR	DX, DX
	DIV	SI
	PUSH	DX
	INC	CX
	OR	AX, AX
	JZ	_NEXT6
	JMP	_NEXT5
_NEXT6:	POP	DX
	CMP	DX, 9
	JA	_LETTER
	ADD	DX, '0'
	JMP	_PRINT1
_LETTER:	ADD	DX, 'A' - 10
_PRINT1:	MOV	AH, 2
	INT	21H
	DEC	BX
	DEC	CX
	JNZ	_NEXT6
	OR	BX, BX
	JZ	_EXIT
	JS	_EXIT
	MOV	DL, ' '
	MOV	AH, 2
_NEXT7:	INT	21H
	DEC	BX
	JNZ	_NEXT7
_EXIT:	POP	DX
	POP	CX
	POP	BX
	POP	AX
	RET
PRINT_NUM ENDP	

PRINT_DECIMAL PROC
	PUSH	AX
	PUSH	BX
	PUSH	SI
	MOVSX	AX, BYTE PTR [SI]
	MOV	BX, 8
	MOV	SI, 10
	CALL	PRINT_NUM
	POP	SI
	POP	BX
	POP	AX
	RET
PRINT_DECIMAL ENDP

CODE ENDS
	END